# Generated by Django 5.1.7 on 2025-07-23 13:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the phone (e.g., iPhone 12, Samsung Galaxy S21)', max_length=100)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base cost of the phone before any platform fees.', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('condition', models.CharField(choices=[('New', 'New'), ('Good', 'Good'), ('Usable', 'Usable'), ('Scrap', 'Scrap')], help_text='Overall condition of the phone.', max_length=20)),
                ('stock', models.IntegerField(default=0, help_text='Current stock quantity of this phone.', validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the e-commerce platform (e.g., X, Y, Z)', max_length=50, unique=True)),
                ('fee_percentage', models.DecimalField(decimal_places=2, help_text='Percentage fee charged by the platform (e.g., 10.00 for 10%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('fixed_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Fixed fee charged by the platform (e.g., 2.00 for $2)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_price', models.DecimalField(decimal_places=2, help_text='Calculated selling price on this specific platform.', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('platform_condition_category', models.CharField(help_text='Platform-specific condition category for the phone.', max_length=50)),
                ('is_listed', models.BooleanField(default=False, help_text='Indicates if the phone is currently listed on this platform.')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='inventory.phone')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='inventory.platform')),
            ],
            options={
                'unique_together': {('phone', 'platform')},
            },
        ),
    ]
